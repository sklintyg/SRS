buildscript {
    ext {
        kotlinVersion = '1.1.2'
        springBootVersion = '1.5.3.RELEASE'
        schemasVersion = System.properties['schemasVersion'] ?: '0-SNAPSHOT'
        rivtaItintegrationMonitoringSchemasVersion = "1.0.0.4"
        restassuredVersion = "2.8.0"
    }

    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }

    dependencies {
        classpath("org.ajoberstar:gradle-git:1.+")
        classpath("se.inera.intyg:gradle-intyg-plugin:1.0.+")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

apply plugin: 'inera-intyg'
apply plugin: 'maven'
apply plugin: 'org.ajoberstar.grgit'

war {
    baseName = 'srs'
}

group = 'se.inera.intyg.srs'
version = System.properties['buildVersion'] ?: '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

task createVersionPropertyFile(type: VersionPropertyFileTask)

war.dependsOn createVersionPropertyFile

uploadArchives.repositories.mavenDeployer {
    repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
        authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
    }
}

task tagRelease(type: TagReleaseTask)

test {
    exclude '**/*IT*'
}

task restAssuredTest(type: Test) {
    outputs.upToDateWhen { false }
    include '**/*IT*'
}

repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
}

dependencies {
    compile "se.inera.intyg.clinicalprocess.healthcond.srs:intyg-clinicalprocess-healthcond-srs-schemas:${schemasVersion}"
    compile "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:${rivtaItintegrationMonitoringSchemasVersion}"

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-test"
    compile "org.springframework.boot:spring-boot-starter-web-services"
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile "org.apache.cxf:cxf-spring-boot-starter-jaxws:3.1.11"
    compile 'org.liquibase:liquibase-core'
    compile "org.apache.logging.log4j:log4j-api:2.7"
    compile "org.apache.logging.log4j:log4j-core:2.7"
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.4"
    compile 'org.nuiton.thirdparty:JRI:0.9-9'

    runtime "com.h2database:h2"

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.jayway.restassured:rest-assured:${restassuredVersion}"
    testCompile "com.nhaarman:mockito-kotlin:1.4.0"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}" // Needed to explicitly set mockito-kotlin to use Kotlin 1.1.X
}
